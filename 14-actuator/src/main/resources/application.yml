spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/springboot?characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
    druid:
      initialSize: 5
      minIdle: 5
      maxActive: 20
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      stat-view-servlet:
        enabled: true
        #        login-username: druid
        #        login-password: 123456
        reset-enable: true
        url-pattern: "/druid/*"
        # allow: 127.0.0.1
      filters: stat,wall,slf4j
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      useGlobalDataSourceStat: true
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        profile-enable: true
      aop-patterns: com.shuijing.boot.*.controller.*,com.shuijing.boot.*.service.*,com.shuijing.boot.*.mapper.*
      filter:
        slf4j:
          enabled: true
          statement-executable-sql-log-enable: true
  redis:
    host: 127.0.0.1
    port: 6379
    timeout: 1000
    jedis:
      pool:
        min-idle: 5
        max-active: 10
        max-idle: 10
        max-wait: 2000
#  # Quartz 相关配置
#  quartz:
#    # Job 持久化方式（数据库）
#    job-store-type: JDBC
#    # 每次启动初始化表结构
#    jdbc:
#      initialize-schema: always
#      # 指定数据库脚本
#      # schema: classpath:tables_mysql_innodb.sql
#    properties:
#      org:
#        quartz:
#          scheduler:
#            # 实例名
#            instanceName: quartzScheduler
#            # 实例 Id 策略
#            instanceId: AUTO
#          jobStore:
#            class: org.quartz.impl.jdbcjobstore.JobStoreTX
#            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#            # 表前缀
#            tablePrefix: QRTZ_
#            isClustered: false
#            clusterCheckinInterval: 10000
#            useProperties: false
#          threadPool:
#            class: org.quartz.simpl.SimpleThreadPool
#            threadCount: 10
#            threadPriority: 5
#            threadsInheritContextClassLoaderOfInitializingThread: true

  # 配置 rabbitMq 服务器
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    # 虚拟主机
    virtual-host: spring-boot


  # 配置 elasticsearch
  elasticsearch:
    rest:
      uris: http://localhost:9200
      connection-timeout: 5
      read-timeout: 10

# 是否启用自动重启，默认值 true
  devtools:
    restart:
      enabled: true

  # 配置应用名称
  application:
    name: actuator

  # 配置 spring boot admin 信息
  boot:
    admin:
      client:
        # 服务端地址
        url: http://localhost:9090/admin
        instance:
          # 客户端地址
          health-url: http://localhost:8080/springboot/actuator/health
#          service-base-url: http://localhost:8080/springboot
          service-url: http://localhost:8080/springboot/doc.html
#          management-base-url: http://localhost:8080/springboot
          management-url: http://localhost:8080/springboot/actuator
        # 服务端用户名密码
        username: admin
        password: 123456

# 监控配置
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    shutdown:
      enabled: true

logging:
  level:
    root: info
    # 输出 SQL
    druid.sql.Statement: debug
    # 输出查询结果
    druid.sql.ResultSet: debug
#  pattern:
#    console: "%d - %m%n"

# WEB 配置
server:
  port: 8080
  servlet:
    context-path: /springboot
    session:
      timeout: 60
  shutdown: graceful

# 配置sql打印日志
#mybatis-plus:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
